using package std-math

data:

auxText is text
auxNumber is number
i is number
j is number
k is number
lines is text list
splitA is text list
splitB is text list
moons is number
positions is number list list
velocities is number list list
pot is number
kin is number
result is number

procedure:

load file "12.txt" in auxText
trim auxText in auxText
split auxText by crlf in lines

get length of lines in moons

for i from 0 to moons step 1 do
    push list to positions
    store lines:i in auxText
    split auxText by "=" in splitA
    split splitA:1 by "," in splitB
    store splitB:0 in auxNumber
    push auxNumber to positions:i
    split splitA:2 by "," in splitB
    store splitB:0 in auxNumber
    push auxNumber to positions:i
    split splitA:3 by ">" in splitB
    store splitB:0 in auxNumber
    push auxNumber to positions:i

    push list to velocities
    push 0 to velocities:i
    push 0 to velocities:i
    push 0 to velocities:i
repeat

for i from 0 to 1000 step 1 do
    for j from 0 to moons step 1 do
        for k from 0 to moons step 1 do
            call gravity with positions:j:0 positions:k:0 velocities:j:0
            call gravity with positions:j:1 positions:k:1 velocities:j:1
            call gravity with positions:j:2 positions:k:2 velocities:j:2
        repeat
    repeat
    for j from 0 to moons step 1 do
        in positions:j:0 solve positions:j:0 + velocities:j:0
        in positions:j:1 solve positions:j:1 + velocities:j:1
        in positions:j:2 solve positions:j:2 + velocities:j:2
    repeat
repeat

for i from 0 to moons step 1 do
    call energy with positions:i pot
    call energy with velocities:i kin
    in result solve result + pot * kin
repeat

display result crlf

sub energy
parameters:
    vector is number list
    result is number
procedure:
    abs vector:0
    abs vector:1
    abs vector:2
    in result solve vector:0 + vector:1 + vector:2
end sub

sub gravity
parameters:
    posA is number
    posB is number
    velA is number
procedure:
    if posA is less than posB then
        in velA solve velA + 1
    else if posA is greater than posB then
        in velA solve velA - 1
    end if
end sub